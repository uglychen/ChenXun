#ifndef _TASK_H_644B35AD_ADAB_42DE_A3C2_D3E479CE88F8_
#define _TASK_H_644B35AD_ADAB_42DE_A3C2_D3E479CE88F8_
#include <string>
#include <jsoncpp/json.h>
#include <boost/shared_ptr.hpp>

#include <decaf/lang/Thread.h>
#include <decaf/lang/Runnable.h>
#include <decaf/util/concurrent/CountDownLatch.h>
#include <decaf/lang/Long.h>
#include <decaf/util/Date.h>
#include <activemq/core/ActiveMQConnectionFactory.h>
#include <activemq/util/Config.h>
#include <activemq/library/ActiveMQCPP.h>
#include <cms/Connection.h>
#include <cms/Session.h>
#include <cms/TextMessage.h>
#include <cms/BytesMessage.h>
#include <cms/MapMessage.h>
#include <cms/ExceptionListener.h>
#include <cms/MessageListener.h>
#include <stdlib.h>
#include <stdio.h>
#include <iostream>
#include <memory>
#include "struct.h"

using namespace activemq;
using namespace activemq::core;
using namespace decaf;
using namespace decaf::lang;
using namespace decaf::util;
using namespace decaf::util::concurrent;
using namespace cms;

enum
{
	proc_task_type_request,
	proc_task_type_callback,
};

class proc_task
{
protected:
	proc_task(int type);
public:
	virtual ~proc_task();

	/***************************************************************************************************************************/
	//获取类型
	/***************************************************************************************************************************/
	int get_proc_type() const { return _proc_type; }
private:
	/***************************************************************************************************************************/
	//类型， request, callback
	/***************************************************************************************************************************/
	int _proc_type;
};


//请求任务
class request_task : public proc_task
{

public:
	request_task();
	virtual ~request_task();

	/***************************************************************************************************************************/
	//清理数据
	/***************************************************************************************************************************/
	void clear();
	/***************************************************************************************************************************/
	//生产唯一的KEY
	/***************************************************************************************************************************/
	std::string key() const;

public:
	/***************************************************************************************************************************/
	//用户账号;
	/***************************************************************************************************************************/
	std::string _account;
	/***************************************************************************************************************************/
	//请求类型
	/***************************************************************************************************************************/
	std::string _type;
	/***************************************************************************************************************************/
	//用户参数
	/***************************************************************************************************************************/
	Json::Value _param;
	/***************************************************************************************************************************/
	//接收的数据信息，保护请求、回复地址和回复ID
	/***************************************************************************************************************************/
	boost::shared_ptr<TextMessage> _message;	
};

//回调任务
class callback_task : public proc_task
{
public:
	callback_task();
	virtual ~callback_task();

	/***************************************************************************************************************************/
	//生产唯一的KEY
	/***************************************************************************************************************************/
	std::string key() const;

public:
	/***************************************************************************************************************************/
	//sid
	/***************************************************************************************************************************/
	callback_response _info;
	/***************************************************************************************************************************/
	//用户名
	/***************************************************************************************************************************/
	std::string _account;
	/***************************************************************************************************************************/
	//回调类型
	/***************************************************************************************************************************/
	int _event_type;
	/***************************************************************************************************************************/
	//回调判断是否成功
	/***************************************************************************************************************************/
	bool _success;
};

#endif // !_TASK_H_644B35AD_ADAB_42DE_A3C2_D3E479CE88F8_
