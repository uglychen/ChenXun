#ifndef _USER_PROC_THREAD_28DA4966_3149_477C_88C9_986106237229_
#define _USER_PROC_THREAD_28DA4966_3149_477C_88C9_986106237229_

#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <unistd.h>
#include <string>
#include "xn_mutex.h"
#include <boost/unordered_map.hpp>
#include "struct.h"

/***************************************************************************************************************************/
//选择线程处理类
/***************************************************************************************************************************/
class proc_thread_select
{
private:
	proc_thread_select();
public:
	~proc_thread_select();

	/***************************************************************************************************************************/
	//初始化
	/***************************************************************************************************************************/
	bool init(time_t out_interval);
	/***************************************************************************************************************************/
	//根据用户名获取对应的处理线程队列
	/***************************************************************************************************************************/
	pthread_t get_select(const std::string& key);
	/***************************************************************************************************************************/
	//删除某一个用户对应的队列
	/***************************************************************************************************************************/
	pthread_t del_select(const std::string& key);
	/***************************************************************************************************************************/
	//更新线程中队列的消息数
	/***************************************************************************************************************************/
	void update_thread_user_count(pthread_t thread_id, unsigned long count = 0);
	/***************************************************************************************************************************/
	//销毁
	/***************************************************************************************************************************/
	void destory();
private:
	/***************************************************************************************************************************/
	//获取新的队列
	/***************************************************************************************************************************/
	inline pthread_t new_thread();
private:
	/***************************************************************************************************************************/
	//接收线程，从总线上接收数据，放入到消息缓冲池里面
	/***************************************************************************************************************************/
	boost::unordered_map<std::string, proc_thread_node> _select_map;
	/***************************************************************************************************************************/
	//线程对应的用户数量
	/***************************************************************************************************************************/
	boost::unordered_map<pthread_t, int> _thread_count_map;
	/***************************************************************************************************************************/
	//_select_map _thread_count_map互斥
	/***************************************************************************************************************************/
	xn_mutex _select_map_mutex;
	/***************************************************************************************************************************/
	//超时时间
	/***************************************************************************************************************************/
	time_t _out_interval;


	friend proc_thread_select& g_proc_thread_select();
};

proc_thread_select& g_proc_thread_select();


#endif