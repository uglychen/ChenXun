# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.


# Where to find user code.
USER_DIR = .

# Where to find source code.
SRC_DIR = .

# Where to find activemq code.
MQ_DIR = ../../../tools/activemq

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem  -I/usr/local/include -I../../../include/trade -L/usr/local/lib -ljson_linux-gcc-4.4.7_libmt -lTradeInterfaceSDK -lssl -lcrypto -I$(MQ_DIR) \
				-I/usr/local/ActiveMQ-CPP/include/activemq-cpp-3.9.4 -I/usr/local -I/usr/local/apr/include/apr-1 -L/usr/local/ActiveMQ-CPP/lib -lactivemq-cpp -lzlog\
				


# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread -DJSON_HAS_INT64

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
OBJ = gd_trade.o sdzp_trade.o xn_mutex.o config.o proc_thread_select.o recv_thread.o user_request_buffer.o proc_thread.o trade_consumer.o trade_producer.o proc_task.o  readXMLConfig.o  tinystr.o  tinyxml.o tinyxmlerror.o tinyxmlparser.o


sdzp_trade : $(OBJ)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

config.o : $(SRC_DIR)/config.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/config.cpp

readXMLConfig.o : $(SRC_DIR)/readXMLConfig.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/readXMLConfig.cpp

tinystr.o : $(SRC_DIR)/tinystr.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/tinystr.cpp

tinyxml.o : $(SRC_DIR)/tinyxml.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/tinyxml.cpp

tinyxmlerror.o : $(SRC_DIR)/tinyxmlerror.cpp
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/tinyxmlerror.cpp

tinyxmlparser.o : $(SRC_DIR)/tinyxmlparser.cpp
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/tinyxmlparser.cpp


proc_thread.o : $(SRC_DIR)/proc_thread.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/proc_thread.cpp


proc_thread_select.o : $(SRC_DIR)/proc_thread_select.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/proc_thread_select.cpp


gd_trade.o : $(SRC_DIR)/gd_trade.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/gd_trade.cpp


recv_thread.o : $(SRC_DIR)/recv_thread.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/recv_thread.cpp


user_request_buffer.o : $(SRC_DIR)/user_request_buffer.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/user_request_buffer.cpp


trade_consumer.o : $(SRC_DIR)/trade_consumer.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/trade_consumer.cpp

trade_producer.o : $(SRC_DIR)/trade_producer.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/trade_producer.cpp

proc_task.o : $(SRC_DIR)/proc_task.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(SRC_DIR)/proc_task.cpp

clean :
	rm -f sdzp_trade *.o
